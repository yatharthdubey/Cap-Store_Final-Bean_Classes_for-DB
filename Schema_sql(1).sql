CREATE TABLE USER
(
    EMAILID NVARCHAR(20) NOT NULL,
    PASSWORD NVARCHAR(15) NOT NULL,
    ROLE NVARCHAR(20) NOT NULL,
	SECURITYQUESTION NVARCHAR(100) NOT NULL,
	securityanswer NVARCHAR(100) NOT NULL,
    PRIMARY KEY(EMAILID),
	CHECK(ROLE = 'ADMIN' OR ROLE = 'MERCHANT' OR ROLE= 'CUSTOMER')
);

CREATE TABLE ADMINDETAIL
(
    ADMINID INT(11) auto_increment,
    ADMINNAME NVARCHAR(20) NOT NULL,
    EMAIL NVARCHAR(30) NOT NULL UNIQUE,
    MOBILENO NVARCHAR(10) NOT NULL UNIQUE,
    primary key(ADMINID)
);
Alter table ADMINDETAIL auto_increment = 100;

CREATE table CUSTOMERDETAIL
(
    CUSTOMERID INT(5) AUTO_INCREMENT,
    CUSTOMERNAME NVARCHAR(20) NOT NULL,
    EMAIL NVARCHAR(30) NOT NULL UNIQUE,
    MOBILENO NVARCHAR(10) NOT NULL UNIQUE,
    ADDRESS NVARCHAR(100) NOT NULL,
    PINCODE NVARCHAR(6) NOT NULL,
    PRIMARY KEY (CUSTOMERID)
);
Alter table CUSTOMERDETAIL AUTO_INCREMENT = 10000;

CREATE TABLE MERCHANTDETAIL
(
    MERCHANTID INT(4) auto_increment,
    MERCHANTNAME NVARCHAR(20) NOT NULL,
    EMAIL NVARCHAR(30) NOT NULL UNIQUE,
    ADDRESS NVARCHAR(100) NOT NULL,
    STORENAME NVARCHAR(20),
	MERCHANTRATING INT(1),
    MOBILENO NVARCHAR(10) NOT NULL UNIQUE,
    PRIMARY KEY(MERCHANTID),
    CHECK(MERCHANTRATING>0 AND MERCHANTRATING<=5)
	
);
Alter Table MERCHANTDETAIL auto_increment = 2000;

CREATE TABLE MERCHANTFEEDBACK
(
    MRID INT(4) auto_increment,
    MERCHANTID INT(4) NOT NULL,
    MERCHANTFEEDBACK NVARCHAR(100) NOT NULL,
	STATUS NVARCHAR(10) NOT NULL,
    primary key(MRID),
    FOREIGN KEY(MERCHANTID) REFERENCES MERCHANTDETAIL(MERCHANTID) ON DELETE CASCADE,
	CHECK(STATUS='R' OR STATUS='C' OR STATUS='V')
);
Alter table MERCHANTFEEDBACK auto_increment = 1000;

CREATE TABLE PRODUCTDETAIL
(
    PRODUCTID INT(5) auto_increment,
    PRODUCTNAME NVARCHAR(20) NOT NULL,
    PRODUCTPRICE DOUBLE NOT NULL,
    PRODUCTCATEGORY NVARCHAR(15) NOT NULL,
    PRODUCTTYPE NVARCHAR(15) NOT NULL,
    PRODUCTBRAND NVARCHAR(15) NOT NULL,
    PRODUCTMODEL NVARCHAR(15) NOT NULL,
    PRODUCTFEATURES NVARCHAR(100) NOT NULL,
	PRODUCTIMAGEURL NVARCHAR(100) NOT NULL,
    primary key (PRODUCTID)
);
Alter table PRODUCTDETAIL auto_increment = 30000;

CREATE TABLE PRODUCTFEEDBACK
(
    PFID INT(4) AUTO_INCREMENT,
    PRODUCTID INT(5) NOT NULL,
	CUSTOMERID INT(5) NOT NULL,
    PRODUCTFEEDBACK NVARCHAR(100),
	PRODUCTRATING INT(1),
    PRIMARY KEY(PFID),
	FOREIGN KEY(CUSTOMERID) REFERENCES CUSTOMERDETAIL(CUSTOMERID),
    FOREIGN KEY(PRODUCTID) REFERENCES PRODUCTDETAIL(PRODUCTID) ON DELETE CASCADE,
	CHECK(PRODUCTRATING>0 AND PRODUCTRATING<=5)
);
Alter table PRODUCTFEEDBACK auto_increment = 6000;

CREATE TABLE DUMMYORDER
(
    ORDERID INT(4) AUTO_INCREMENT,
    PRIMARY KEY(ORDERID)
);
Alter table DUMMYORDER auto_increment = 9000;


CREATE TABLE WISHLIST
(
	WISHID INT(4) AUTO_INCREMENT,
    CUSTOMERID INT(5) NOT NULL, 
    PRODUCTID INT(5) NOT NULL,
    MERCHANTID INT(4) NOT NULL,
    PRODUCTPRICE DOUBLE NOT NULL,
	PRIMARY KEY(WISHID),
    FOREIGN KEY(CUSTOMERID) REFERENCES CUSTOMERDETAIL(CUSTOMERID),
    FOREIGN KEY(MERCHANTID) REFERENCES MERCHANTDETAIL(MERCHANTID),
    FOREIGN KEY(PRODUCTID) REFERENCES PRODUCTDETAIL(PRODUCTID) ON DELETE CASCADE
);
Alter table WISHLIST auto_increment = 1500;

CREATE TABLE PROMO
(
    PROMOCODE NVARCHAR(15),
    DISCOUNTOFFERED DOUBLE NOT NULL,
    PROMOVALIDITY DATE,
    SOFTDELETE NVARCHAR(1) NOT NULL,
    primary key(promocode),
    CHECK(SOFTDELETE='I' OR SOFTDELETE='A')
);

CREATE TABLE CART
(
	CARTID INT(5) AUTO_INCREMENT,
    CUSTOMERID INT(5) NOT NULL, 
    PRODUCTID INT(5) NOT NULL,
    MERCHANTID INT(4) NOT NULL,
    PRODUCTQUANTITY INT NOT NULL,
    PRODUCTPRICE DOUBLE NOT NULL,
    PROMOCODE NVARCHAR(15) NOT NULL,
    SOFTDELETE NVARCHAR(1) NOT NULL,
	primary key(CARTID),
    FOREIGN KEY(CUSTOMERID) REFERENCES CUSTOMERDETAIL(CUSTOMERID),
    FOREIGN KEY(PRODUCTID) REFERENCES PRODUCTDETAIL(PRODUCTID) ON DELETE CASCADE,
    FOREIGN KEY(MERCHANTID) REFERENCES MERCHANTDETAIL(MERCHANTID) ON DELETE CASCADE,
    FOREIGN KEY(PROMOCODE) REFERENCES PROMO(PROMOCODE) ON DELETE CASCADE,
    CHECK(SOFTDELETE='I' OR SOFTDELETE='A')
);
Alter table CART auto_increment = 20000;

CREATE TABLE OFFER
(
    OFFERID INT(2) auto_increment,
    MERCHANTID INT(4) NOT NULL, 
    OFFERDESCRIPTION NVARCHAR(100),
    PRODUCTID INT(5) NOT NULL, 
    OFFERSTARTDATE DATE NOT NULL,
    OFFERENDDATE DATE NOT NULL,
    DISCOUNTOFFERED DOUBLE NOT NULL,
    SOFTDELETE NVARCHAR(1) NOT NULL,
    PRIMARY KEY(OFFERID),
    FOREIGN KEY(PRODUCTID) REFERENCES PRODUCTDETAIL(PRODUCTID),
    FOREIGN KEY(MERCHANTID) REFERENCES MERCHANTDETAIL(MERCHANTID),
    CHECK(SOFTDELETE='I' OR SOFTDELETE='A')
);
Alter table OFFER auto_increment = 10;

CREATE TABLE RETURNREQUEST
(
	RETID INT(4) auto_increment,
    CUSTOMERID INT(5) NOT NULL,
    PRODUCTID INT(5) NOT NULL,
	MERCHANTID INT(4) NOT NULL,
    ORDERID INT(5) NOT NULL,
    REFUNDAMOUNT DOUBLE NOT NULL, 
    RETURNSTATUS NVARCHAR(10) NOT NULL,
	PRIMARY KEY(RETID),
    FOREIGN KEY(CUSTOMERID) REFERENCES CUSTOMERDETAIL(CUSTOMERID),
	FOREIGN KEY(MERCHANTID) REFERENCES MERCHANTDETAIL(MERCHANTID),
    FOREIGN KEY(PRODUCTID) REFERENCES PRODUCTDETAIL(PRODUCTID),
    FOREIGN KEY(ORDERID) REFERENCES DUMMYORDER(ORDERID),
    CHECK(RETURNSTATUS='APPLIED' OR RETURNSTATUS='APPROVED' OR RETURNSTATUS='REJECTED')
);
Alter table OFFER auto_increment = 4000;

CREATE TABLE MERCHANTDETAIL_PRODUCTS
(
    merchant_merchantid INT(4) NOT NULL,
    products_productid INT(5) NOT NULL,
    FOREIGN KEY(merchant_merchantid) REFERENCES MERCHANTDETAIL(MERCHANTID) ON DELETE CASCADE,
    FOREIGN KEY(products_productid) REFERENCES PRODUCTDETAIL(PRODUCTID) ON DELETE CASCADE
);


CREATE TABLE EMAIL
(
	EID INT(4) auto_increment,
    SENDER NVARCHAR(20) NOT NULL,
    RECEIVER NVARCHAR(20) NOT NULL,
    SUBJECT NVARCHAR(50),
    BODYMESSAGE NVARCHAR(500),
	STATUS NVARCHAR(1) NOT NULL,
	PRIMARY KEY(EID),
	CHECK(STATUS='Y' OR STATUS='N')
);
Alter table EMAIL auto_increment = 8000;

CREATE TABLE ORDERDETAIL
(
	ORID INT(3) AUTO_INCREMENT,
    ORDERID INT(5) NOT NULL,
    ORDERDATE DATE NOT NULL,
    CUSTOMERID INT(5) NOT NULL,
    MERCHANTID INT(4) NOT NULL,
    PRODUCTID INT(5) NOT NULL,
    PRODUCTQUANTITY INT NOT NULL,
    TOTALPRICE DOUBLE NOT NULL,
    FINALPRICE DOUBLE NOT NULL,
	PROMOCODE NVARCHAR(15) NOT NULL,
	DELIVERYSTATUS NVARCHAR(20) NOT NULL,
	PRIMARY KEY(ORID),
	FOREIGN KEY(PROMOCODE) REFERENCES PROMO(PROMOCODE) ON DELETE CASCADE,
    FOREIGN KEY(ORDERID) REFERENCES DUMMYORDER(ORDERID),
    FOREIGN KEY(MERCHANTID) REFERENCES MERCHANTDETAIL(MERCHANTID),
    FOREIGN KEY(CUSTOMERID) REFERENCES CUSTOMERDETAIL(CUSTOMERID) ON DELETE CASCADE,
    FOREIGN KEY(PRODUCTID) REFERENCES PRODUCTDETAIL(PRODUCTID) ON DELETE CASCADE,
	CHECK(DELIVERYSTATUS='ORDERED' OR DELIVERYSTATUS = 'SHIPPED' OR DELIVERYSTATUS = 'OUTFORDELIVERY' OR DELIVERYSTATUS='DELIVERED')
);
Alter table ORDERDETAIL auto_increment = 500;

create table admseq
(next_val bigint(20));

create table cartseq
(next_val bigint(20));

create table custseq
(next_val bigint(20));

create table emseq
(next_val bigint(20));

create table mercfseq
(next_val bigint(20));

create table mercseq
(next_val bigint(20));

create table offerseq
(next_val bigint(20));

create table ordseq
(next_val bigint(20));

create table prodfseq
(next_val bigint(20));


create table prodseq
(next_val bigint(20));

create table retseq
(next_val bigint(20));

create table wishseq
(next_val bigint(20));















